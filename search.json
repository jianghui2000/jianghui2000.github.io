[{"title":"Hello World","url":"/2021/11/08/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"一些没有根基的小把戏01 - GitHub 简单建站","url":"/2025/05/07/%E4%B8%80%E4%BA%9B%E6%B2%A1%E6%9C%89%E6%A0%B9%E5%9F%BA%E7%9A%84%E5%B0%8F%E6%8A%8A%E6%88%8F/","content":"GitHub page（就是随便搭个github.io 后缀的博客网站）我试过一个简单的办法（主要是hexo deploy推送代码到远程仓库实在是太容易失败了）直接使用GitHub desktop 管理本地仓库，然后直接向里面复制 hexo生成的静态网页文件（在博客文件夹固定的public文件夹里），无所谓版本管理了。际上，什么本地生成公钥然后上传到 GitHub 上的主要还是为了完成 hexo deploy 的操作，关键是太容易失败了，直接点，在本地生成博客文件之后通过GitHub desktop管理的本地仓库上传非常方便。现在简化过后的步骤大概就是① 如果没有GitHub账号的话，创建一个。② 创建一个以用户名.github.io 为后缀名的仓库repository。接着就可以在设置page里面开启page。创建完仓库之后，现在可以本地安装一个GitHub desktop，然后用其创建一个本地仓库，方便直接放入静态网页文件。③ 按照网上的一般教程 nodejs + hexo 在本地生成静态网页文件，hexo clean （清除缓存） ，hexo g（generate 生成静态文件），hexo s（start 在本地localhost:4000启动访问网站），hexo d（deploy 让这个见鬼去吧 ）→ 直接将位于 博客文件夹下的public里面的内容（不要是public，必须是 index.html）复制到本地仓库 .git同一文件夹下，GitHub desktop会自动同步，然后等一会，浏览器访问 你的用户名.github.io 即可看到自己本地生成的博客。博客有很多模板可循。\n","tags":["技术"]}]